#!/bin/bash

# Agent Wizard BigQuery Setup Script
# This script provisions Google Cloud resources using Terraform

set -e

echo "🚀 Agent Wizard BigQuery Setup"
echo "================================"

# Check if required tools are installed
check_dependencies() {
    echo "Checking dependencies..."
    
    if ! command -v terraform &> /dev/null; then
        echo "❌ Terraform is not installed. Please install Terraform first."
        exit 1
    fi
    
    if ! command -v gcloud &> /dev/null; then
        echo "❌ Google Cloud CLI is not installed. Please install gcloud first."
        exit 1
    fi
    
    echo "✅ Dependencies check passed"
}

# Authenticate with Google Cloud
authenticate_gcloud() {
    echo
    echo "🔐 Google Cloud Authentication"
    echo "Please ensure you're authenticated with Google Cloud CLI:"
    echo "  gcloud auth login"
    echo "  gcloud auth application-default login"
    echo
    
    read -p "Have you completed authentication? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Please complete authentication and run this script again."
        exit 1
    fi
}

# Get project configuration
get_project_config() {
    echo
    echo "📋 Project Configuration"
    
    # Get current project if available
    CURRENT_PROJECT=$(gcloud config get-value project 2>/dev/null || echo "")
    
    if [ ! -z "$CURRENT_PROJECT" ]; then
        echo "Current Google Cloud project: $CURRENT_PROJECT"
        read -p "Use this project? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            PROJECT_ID=$CURRENT_PROJECT
        fi
    fi
    
    if [ -z "$PROJECT_ID" ]; then
        read -p "Enter Google Cloud Project ID: " PROJECT_ID
    fi
    
    read -p "Enter environment (dev/staging/prod) [dev]: " ENVIRONMENT
    ENVIRONMENT=${ENVIRONMENT:-dev}
    
    read -p "Enter region [us-central1]: " REGION
    REGION=${REGION:-us-central1}
    
    echo
    echo "Configuration:"
    echo "  Project ID: $PROJECT_ID"
    echo "  Environment: $ENVIRONMENT"
    echo "  Region: $REGION"
    echo
}

# Create terraform.tfvars file
create_tfvars() {
    echo "📝 Creating terraform.tfvars..."
    
    cat > terraform.tfvars <<EOF
project_id = "$PROJECT_ID"
environment = "$ENVIRONMENT"
region = "$REGION"
service_name = "agent-wizard"
EOF
    
    echo "✅ Created terraform.tfvars"
}

# Initialize and apply Terraform
apply_terraform() {
    echo
    echo "🏗️  Initializing Terraform..."
    terraform init
    
    echo
    echo "📋 Planning Terraform changes..."
    terraform plan
    
    echo
    read -p "Apply these changes? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Terraform apply cancelled."
        exit 1
    fi
    
    echo "🚀 Applying Terraform configuration..."
    terraform apply -auto-approve
    
    echo "✅ Terraform apply completed!"
}

# Extract outputs and create environment file
create_env_file() {
    echo
    echo "📄 Creating environment configuration..."
    
    # Get Terraform outputs
    PROJECT_ID_OUTPUT=$(terraform output -raw project_id)
    DATASET_ID_OUTPUT=$(terraform output -raw dataset_id)
    SERVICE_ACCOUNT_EMAIL=$(terraform output -raw service_account_email)
    SERVICE_ACCOUNT_KEY=$(terraform output -raw service_account_key)
    
    # Create .env file
    cat > ../.env.bigquery <<EOF
# BigQuery Configuration for Agent Wizard
# Generated by Terraform setup script

USE_BIGQUERY=true
GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID_OUTPUT
BIGQUERY_DATASET_ID=$DATASET_ID_OUTPUT
BIGQUERY_LOCATION=$REGION
AGENTS_TABLE_ID=agents
CONVERSATIONS_TABLE_ID=conversations

# Service Account Configuration
GOOGLE_SERVICE_ACCOUNT_EMAIL=$SERVICE_ACCOUNT_EMAIL
GOOGLE_SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT_KEY

# Query Settings
BIGQUERY_QUERY_TIMEOUT=30
BIGQUERY_MAX_RETRIES=3
BIGQUERY_ENABLE_LOGGING=true
BIGQUERY_USE_CACHE=true

# Environment
ENVIRONMENT=$ENVIRONMENT
EOF
    
    echo "✅ Created .env.bigquery file"
    echo
    echo "📋 Environment file contains:"
    echo "  - BigQuery project and dataset configuration"
    echo "  - Service account credentials (base64 encoded)"
    echo "  - Query and performance settings"
    echo
    echo "🔒 IMPORTANT: The .env.bigquery file contains sensitive credentials."
    echo "   Keep it secure and do not commit it to version control."
}

# Display completion information
display_completion() {
    echo
    echo "🎉 Setup Complete!"
    echo "=================="
    echo
    echo "✅ Google Cloud resources created:"
    echo "  - BigQuery dataset: $DATASET_ID_OUTPUT"
    echo "  - Service account: $SERVICE_ACCOUNT_EMAIL"
    echo "  - Required API services enabled"
    echo "  - Tables: agents, conversations"
    echo
    echo "📋 Next steps:"
    echo "  1. Load environment: source .env.bigquery"
    echo "  2. Install Python dependencies: pip install google-cloud-bigquery google-auth"
    echo "  3. Test connection: python -c \"from bigquery_client import BigQueryClient; client = BigQueryClient(); print(client.health_check())\""
    echo "  4. Start your Agent Wizard service with BigQuery enabled"
    echo
    echo "🔗 Useful links:"
    echo "  - BigQuery Console: $(terraform output -raw bigquery_dataset_url)"
    echo "  - Project Console: https://console.cloud.google.com/home/dashboard?project=$PROJECT_ID_OUTPUT"
    echo
}

# Main execution
main() {
    cd "$(dirname "$0")"
    
    check_dependencies
    authenticate_gcloud
    get_project_config
    create_tfvars
    apply_terraform
    create_env_file
    display_completion
}

# Run main function
main "$@"