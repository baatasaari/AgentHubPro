# NGINX API Gateway Configuration for AgentHub Microservices
# Routes requests to appropriate microservices with load balancing

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=20r/m;

    # Upstream definitions for microservices
    upstream auth_service {
        least_conn;
        server auth-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream user_management_service {
        least_conn;
        server user-management-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream organization_service {
        least_conn;
        server organization-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream agent_creation_service {
        least_conn;
        server agent-creation-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream agent_management_service {
        least_conn;
        server agent-management-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream llm_service {
        least_conn;
        server llm-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream rag_service {
        least_conn;
        server rag-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream embedding_service {
        least_conn;
        server embedding-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream file_storage_service {
        least_conn;
        server file-storage-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream conversation_service {
        least_conn;
        server conversation-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream whatsapp_service {
        least_conn;
        server whatsapp-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream instagram_service {
        least_conn;
        server instagram-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream messenger_service {
        least_conn;
        server messenger-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream sms_service {
        least_conn;
        server sms-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream telegram_service {
        least_conn;
        server telegram-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream webchat_service {
        least_conn;
        server webchat-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream payment_service {
        least_conn;
        server payment-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream billing_service {
        least_conn;
        server billing-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream usage_tracking_service {
        least_conn;
        server usage-tracking-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream notification_service {
        least_conn;
        server notification-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream audit_service {
        least_conn;
        server audit-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream monitoring_service {
        least_conn;
        server monitoring-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream orchestration_service {
        least_conn;
        server orchestration-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Authentication service routes
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://auth_service/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # User management service routes
        location /api/users/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://user_management_service/users/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Organization service routes
        location /api/organizations/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://organization_service/organizations/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Agent creation service routes
        location /api/agents/create {
            limit_req zone=api burst=5 nodelay;
            proxy_pass http://agent_creation_service/agents;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/templates/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://agent_creation_service/templates/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Agent management service routes
        location /api/agents/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://agent_management_service/agents/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # LLM service routes
        location /api/llm/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://llm_service/llm/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 120s;
        }

        # RAG service routes
        location /api/rag/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://rag_service/rag/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File storage service routes
        location /api/files/ {
            limit_req zone=api burst=20 nodelay;
            client_max_body_size 50M;
            proxy_pass http://file_storage_service/files/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
        }

        # Conversation service routes
        location /api/conversations/ {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://conversation_service/conversations/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Platform integration routes
        location /api/whatsapp/ {
            limit_req zone=api burst=200 nodelay;
            proxy_pass http://whatsapp_service/whatsapp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/instagram/ {
            limit_req zone=api burst=200 nodelay;
            proxy_pass http://instagram_service/instagram/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/messenger/ {
            limit_req zone=api burst=200 nodelay;
            proxy_pass http://messenger_service/messenger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/sms/ {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://sms_service/sms/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/telegram/ {
            limit_req zone=api burst=200 nodelay;
            proxy_pass http://telegram_service/telegram/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket support for webchat
        location /api/webchat/ {
            proxy_pass http://webchat_service/webchat/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Payment service routes
        location /api/payments/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://payment_service/payments/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Billing service routes
        location /api/billing/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://billing_service/billing/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Analytics service routes
        location /api/analytics/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://analytics_service/analytics/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notification service routes
        location /api/notifications/ {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://notification_service/notifications/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Monitoring service routes
        location /api/monitoring/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://monitoring_service/monitoring/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Catch-all for undefined routes
        location / {
            return 404;
        }
    }

    # SSL/TLS configuration (for production)
    server {
        listen 443 ssl http2;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Include the same location blocks as the HTTP server
        include /etc/nginx/conf.d/locations.conf;
    }
}